x13 <- data.frame(foo = 1:4, bar = c(T, T, F, F))
#14
x13 <- data.frame(foo = 1:4, bar = c(T, T, F, F))
x13 #column names: foo, bar
#15
install.packages("SportsAnalytics")
library(SportsAnalytics)
NBA1415<-fetch_NBAPlayerStatistics("14-15")
names(NBA1415)
head(NBA1415)
View(NBA1415)
head(NBA1415)
x16<-as.Date("1970-01-01")
x16
unclass(x16)
unclass(as.Date("1971-01-01"))
x16<-as.date("1990-10-10")
x16<-as.Date("1990-10-10")
x15<-as.Date("1990-10-10")
x16<-as.Date("1970-01-01")
x15-x16
as.Date(x15-x16)
x17<-as.Date(x15-x16)
weekdays(x16)
months(x16)
x17<-as.Date(weekdays(x15-x16))
seq(Sys.Date(), by="1 months", length.out=12)
seq(as.Date("2016-01-31"), by="1 months", length.out=12)
x18 <- as.Date("2012-03-01")
y18 <-as.Date("2012-02-28")
x18-y18
as.Date("2012/03/01")
as.Date("2012 MAR 01")
as.Date("2012 MAR 01", "%Y %b %d")
iris[1,2] #(Row 1, Column 2)
iris[,"Species"] #Column name=="Species"
iris$Species #Column name=="Species"
subset(iris, Species=="virginica") #Species == "virginica"
iris[iris$Species=="virginica",]#Species == "virginica"
San<-subset(NBA1415,Team=='SAN')
San
San[order(San$GamesPlayed,decreasing = T),"Name"]
View(NBA1415)
NBA1415$Position
x19<-
for(i in 1:nrow(NBA1415))
if(NBA1415[i:GamesPlayed]>70&NBA1415[i:TotalPoints]>1500)
x19<-
for(i in 1:nrow(NBA1415))
if(NBA1415[i:GamesPlayed]>70&NBA1415[i:TotalPoints]>1500)
x19<-
for(i in 1:nrow(NBA1415))
if(NBA1415[i:GamesPlayed]>70&NBA1415[i:TotalPoints]>1500)
x19<-NBA1415[i]
x15<-as.Date("1990-10-10")
x15-x16
as.Date(x15-x16)
x17<-as.Date()
for(i in 1:nrow(NBA1415))
if(NBA1415[i:GamesPlayed]>70&NBA1415[i:TotalPoints]>1500)
x19<-NBA1415[i]
x15<-as.Date("1990-10-10")
x15-x16
as.Date(x15-x16)
x17<-as.Date()
for(i in 1:nrow(NBA1415))
if(NBA1415[i:"GamesPlayed"]>70&NBA1415[i:"TotalPoints"]>1500)
print(NBA1415[i,c("Name","Team","position")])
for(i in 1:nrow(NBA1415))
if(NBA1415[i:"GamesPlayed"]>70&NBA1415[i:"TotalPoints"]>1500)
print(NBA1415[i,c("Name","Team","position")])
for(i in 1:nrow(NBA1415)){
if(NBA1415[i:"GamesPlayed"]>70&NBA1415[i:"TotalPoints"]>1500){
print(NBA1415[i,c("Name","Team","position")])}}
for(i in 1:nrow(NBA1415)){
if(NBA1415[i:"GamesPlayed"]>70&NBA1415[i:"TotalPoints"]>1500){
print(NBA1415[i,c("Name","Team","position")])}}
for(i in 1:nrow(NBA1415)){
if(NBA1415[i:"GamesPlayed"]>70&NBA1415[i:"TotalPoints"]>1500){
print(NBA1415[i,c("Name","Team","position")])}}
for(i in 1:nrow(NBA1415)){
if(NBA1415[i:"GamesPlayed"]>70&NBA1415[i:"TotalPoints"]>1500){
print(NBA1415[i,c("Name","Team","position")])}}
for(i in 1:nrow(NBA1415)){
if(NBA1415[i:"GamesPlayed"]>70&NBA1415[i:"TotalPoints"]>1500){
print(NBA1415[i,c("Name","Team","position")])}}
if(!require('SportsAnalytics')){
install.packages("SportsAnalytics")
library(SportsAnalytics)
}
NBA1415<-fetch_NBAPlayerStatistics("14-15")
for(i in 1:nrow(NBA1415)){
if(NBA1415[i:"GamesPlayed"]>70&NBA1415[i:"TotalPoints"]>1500){
print(NBA1415[i,c("Name","Team","position")])}}
for(i in l:nrow(NBA1415)){
if(NBA1415[i:"GamesPlayed"]>70&NBA1415[i:"TotalPoints"]>1500){
print(NBA1415[i,c("Name","Team","Position")])}}
for(i in 1:nrow(NBA1415)){
if(NBA1415[i:"GamesPlayed"]>70&NBA1415[i:"TotalPoints"]>1500){
print(NBA1415[i,c("Name","Team","Position")])}}
for(i in 1:nrow(NBA1415)){
if(NBA1415[i,"GamesPlayed"]>70&NBA1415[i,"TotalPoints"]>1500){
print(NBA1415[i,c("Name","Team","Position")])}}
subset(NBA1415,GamesPlayed>70&TotalPoints>1500)[,c("Name","Team","Position")]
subset(NBA1415,Team=San)
subset(NBA1415,Team==San)
subset(NBA1415,Team=San)
subset(NBA1415,Team=San)[,c("Name")]
subset(NBA1415,Team=SAN)[,c("Name")]
subset(NBA1415,Team=='SAN')[,c("Name")]
SAN<-subset(NBA1415,Team=='SAN')[,c("Name")]
SAN<-subset(NBA1415,Team=='SAN')[,c("Name","TotalPoints")]
View(San)
View(San)
View(San)
subset(NBA1415,Team=='SAN')[,c("Name","TotalPoints")]
View(SAN)
View(SAN)
order(SAN$TotalPoints,decreasing = T)
order(SAN$TotalPoints,decreasing = T)[1]
order(SAN$TotalPoints,decreasing = T)C("Name")
order(SAN$TotalPoints,decreasing = T)c("Name")
order(SAN$TotalPoints,decreasing = T),c("Name")
SAN[ order(SAN$TotalPoints,decreasing = T),c("Name")]
SAN[ order(SAN$TotalPoints,decreasing = T),c("Name","TotalPoints")]
